对象各自完成工作，减少对程序的耦合度
面向对象的优点：高内聚  低耦合


一， 对象
1，对象指的是一个具体“事物” ，承载数据
2，组成： 
	属性：记录对象相关的数据   类似:变量
	方法：实现与对象相关的操作  类似：函数
二，类
	很多事物存在相同的操作 行为
	类是定义对象的共同行为
	类是对象的集合体
	
二，类和对象的关系
	类就是对象的模板， 用于定义对象公共的行为
	有利于复用与代码创建拥有对象特征的对象
	每个对象必须有一个对象的类



类和对象的使用：
创建对象前要先定义类：

class 类名：   类名规范：使用"大驼峰"命名
	def 方法名(self): 定义一个方法	 # 方法与方法之间可以隔一行
		方法具体功能
创建对象：
对象名 = 类名（）

# 方法中的第一个self不要手动传递对应的实参，python解析器，会在执行时，自动帮我传递
使用对象的方法：
对象.方法（）


定义属性：
对象.属性名 = "属性值"   第一次给对象的属性赋值，就是定义添加一个属性
			 第二次给对象的属性赋值，就是修改对象的属性值

调用属性：
对象.属性名

对象只能调用他自己所对应 类 中的方法